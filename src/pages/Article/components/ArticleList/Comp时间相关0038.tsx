
  import React,{useEffect} from 'react';
 
  import 'highlight.js/styles/xcode.css';
  const hljs = require('highlight.js');

  export default () => {
    useEffect(()=>{
      document.querySelectorAll('code').forEach(el => {
        el.style.backgroundColor='#f8f8f8';
        el.style.marginBottom='0.1rem';
        hljs.highlightElement(el);
      });
    },[])
    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:"<ul>\n<li>列举下获取指定日期的毫秒数的方法有哪些？</li>\n</ul>\n<pre><code class=\"language-js\">new Date().getTime();\nDate.now();\n\n</code></pre>\n<ul>\n<li>写个还剩下多少天过年的倒计时</li>\n</ul>\n<pre><code class=\"language-js\">function getCountDown2SpringFestival (festivalTime) {\n  const end = new Date(festivalTime).getTime();\n  const start = new Date().getTime();\n  let remainMs = end - start;\n  const day = Math.floor(remainMs / 1000 / 60 / 60 / 24);\n  const remainHours = remainMs % (1000 * 60 * 60 * 24)\n  const hour = Math.floor(remainHours / (1000 * 60 * 60));\n  const remainMinutes = remainHours % (1000 * 60 * 60);\n  const minute = Math.floor(remainMinutes / (1000 * 60));\n  const remainSecond = remainMinutes % (1000 * 60);\n  const second = Math.floor(remainSecond / 1000)\n  return { day, hour, minute, second }\n}\n// 测试\nconsole.log(getCountDown2SpringFestival('2024/2/10'))\n</code></pre>\n<ul>\n<li>写一个方法把分钟转化为时分，例如：150->02:30</li>\n</ul>\n<pre><code class=\"language-js\">function fill (number) {\n  if (number < 10) return `0${number}`\n  return `${number}`\n}\nfunction convertM2HM (minute) {\n  const hours = Math.floor(minute / 60);\n  const remainM = minute % 60\n  return `${fill(hours)}:${fill(remainM)}`;\n}\n// 测试\nconsole.log(convertM2HM(165));\n</code></pre>\n<ul>\n<li>写一个格式化时间的方法</li>\n</ul>\n<pre><code class=\"language-js\">// 方法一\nfunction formatDate (date) {\n  return date.toLocaleString();\n}\n//测试\nconsole.log(formatDate(new Date()));\n//方法二\n\nfunction formatDate (d) {\n  if (Object.prototype.toString.call(d) !== '[object Date]') {\n    return () => console.log(`${d} is not valid`);\n  }\n\n  const year = d.getFullYear();\n  const month = d.getMonth();\n  const date = d.getDate();\n  const hours = d.getHours();\n  const minutes = d.getMinutes();\n  const seconds = d.getSeconds();\n  const dateObj = { year, month, date, hours, minutes, seconds }\n\n  return (format) => format ? format(dateObj) : dateObj;\n}\n\n// 测试\nconst fn = formatDate(new Date());\nconst ans = fn(({ year, month, date, hours, minutes, seconds }) => {\n  return `${year}-${month + 1}-${date} ${hours}:${minutes}:${seconds}`;\n})\nconsole.log(ans);\n\n\n</code></pre>\n<ul>\n<li>模拟 localStorage 时如何实现过期时间功能</li>\n</ul>\n<pre><code class=\"language-js\">\nfunction LocalStorage (maxExpire) {\n  this.data = new Map();\n  this.time = new Map();\n  this.maxExpire = maxExpire\n  this.setItem = function (key, val) {\n    this.data.set(key, val)\n    this.time.set(key, Date.now())\n  }\n  this.getItem = function (key) {\n    const val = this.data.get(key);\n    if (Date.now() - this.time.get(key) > this.maxExpire) {\n      this.data.delete(key);\n      this.time.delete(key);\n      return '已过期';\n    }\n    return val;\n  }\n  this.removeItem = function (key) {\n    this.data.delete(key);\n  }\n}\n// 测试\nconst store = new LocalStorage(1000);\nstore.setItem('key', 'value');\nsetTimeout(() => {\n  console.log(store.getItem('key'));\n}, 500);\nsetTimeout(() => {\n  console.log(store.getItem('key'));\n}, 1500);\n\n</code></pre>\n<ul>\n<li>写个方法获取给定开始和结束时间的所有日期和月份</li>\n</ul>\n<pre><code class=\"language-js\">// 方式一\nfunction getYearBetween ({ start, end }) {\n  const yearList = [];\n  const startYear = new Date(start).getFullYear();\n  const endYear = new Date(end).getFullYear();\n  new Array(endYear - startYear + 1).fill(0).forEach((_, index) => {\n    yearList.push(index + startYear);\n  });\n  return yearList;\n}\n// 方法二\nfunction getYearBetween2 ({ start, end }) {\n  let startTime = new Date(start);\n  const endTime = new Date(end);\n  const yearList = [];\n  while (endTime - startTime >= 0) {\n    const year = startTime.getFullYear();\n    yearList.push(year);\n    startTime.setFullYear(year + 1);\n    startTime.setMonth(0)\n    startTime.setDate(1)\n  }\n  return yearList;\n}\n\nfunction getMonthBetween ({ start, end }) {\n  let startTime = new Date(start);\n  const endTime = new Date(end);\n  const monthList = [];\n  while (endTime - startTime >= 0) {\n    const month = startTime.getMonth();\n    const year = startTime.getFullYear();\n    monthList.push(`${year}/${month + 1}`);\n    startTime.setMonth(month + 1);\n    startTime.setDate(1)\n  }\n  return monthList;\n}\nfunction getDateBetween ({ start, end }) {\n  let startTime = new Date(start).getTime();\n  const endTime = new Date(end).getTime();\n  const dateList = [];\n  const OneDay = 24 * 60 * 60 * 1000\n  while (endTime - startTime >= 0) {\n    dateList.push(new Date(startTime).toLocaleDateString());\n    // 一天\n    startTime += OneDay;\n  }\n  return dateList;\n}\nconst start = '2008-6-20';\nconst end = '2023-4-1';\nconst ans = getYearBetween2({ start, end });\nconsole.log(ans);\n</code></pre>\n<ul>\n<li>\n<p>写一个方法记录函数运行的时间</p>\n</li>\n<li>\n<p>请使用js实现一个秒表计时器的程序</p>\n</li>\n<li>\n<p>使用js写一个时钟的程序</p>\n</li>\n<li>\n<p>输入一个日期 返回几秒前、几小时前、几天前、几月前</p>\n</li>\n<li>\n<p>写一个方法将UTC时间和北京时间换算(多8个小时)</p>\n</li>\n</ul>\n"}}></div>
  }
  