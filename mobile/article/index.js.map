{"version":3,"file":"article/index.js","mappings":"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G,CAAC,mLAAO;;;;AAIxB,iEAAe,0LAAc,MAAM;;;;;;UCZnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://xingguozm.github.io/./src/article.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/CompDNS和CDN0005.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/CompHTTP网络的发展0006.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/Compthis0001.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/Comp事件循环0002.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/Comp作用域0003.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/Comp原型链0004.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/Comp网络模型0007.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/ArticleList/index.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/Header/index.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/PageBg/index.tsx","webpack://xingguozm.github.io/./src/pages/Article/index.tsx","webpack://xingguozm.github.io/./src/pages/Article/components/Header/index.less","webpack://xingguozm.github.io/./src/pages/Article/components/PageBg/index.module.less","webpack://xingguozm.github.io/./src/pages/Article/index.module.less","webpack://xingguozm.github.io/./src/pages/Article/components/Header/index.less?72eb","webpack://xingguozm.github.io/./src/pages/Article/components/PageBg/index.module.less?b2de","webpack://xingguozm.github.io/./src/pages/Article/index.module.less?a021","webpack://xingguozm.github.io/webpack/bootstrap","webpack://xingguozm.github.io/webpack/runtime/chunk loaded","webpack://xingguozm.github.io/webpack/runtime/compat get default export","webpack://xingguozm.github.io/webpack/runtime/define property getters","webpack://xingguozm.github.io/webpack/runtime/hasOwnProperty shorthand","webpack://xingguozm.github.io/webpack/runtime/make namespace object","webpack://xingguozm.github.io/webpack/runtime/jsonp chunk loading","webpack://xingguozm.github.io/webpack/before-startup","webpack://xingguozm.github.io/webpack/startup","webpack://xingguozm.github.io/webpack/after-startup"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Article from '@/pages/Article';\nimport './index.less'\n\nexport default function App() {\n  return <div className='app'>\n    <Article />\n  </div>\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:`<h3>浏览器中输入URL到返回页面的全过程</h3>\n<pre><code>1. 根据域名，进行DNS域名解析\n2. 拿到解析的IP地址，建立TCP连接\n3. 向IP地址发送HTTP请求\n4. 服务器处理请求\n5. 返回响应结果\n6. 关闭TCP连接\n7. 浏览器解析HTML\n8. 浏览器布局渲染\n</code></pre>\n<h3>DNS起源</h3>\n<ol>\n<li>\n<p>网络出现早期是使用IP地址通信的，那时就几台主机。</p>\n</li>\n<li>\n<p>随着接入网络的主机越来越多，这种数字标识的地址非常不便于记忆。UNIX上就出现了hosts文件（Linux和Windows系统上继承保留了这个文件）。这个文件记录了这主机名称和IP地址的对应表，只要输入主机名，系统就会加载hosts文件并查找对应关系，找到对应的IP就能访问对应的主机了。</p>\n</li>\n<li>\n<p>随着主机的数量进一步增多，无法保证所有人都能拿到统一的最新的hosts文件，于是就出现了在文件服务器上集中存放hosts文件，以供下载使用。</p>\n</li>\n<li>\n<p>互联网规模进继续扩大，这种方式也不堪重负，而且把所有地址解析记录形成的文件都同步到所有客户端也不是一个好办法。这时就出现了DNS，随着解析规模的继续扩大，DNS也在不断的演化，直到现在的多层体系</p>\n</li>\n</ol>\n<p>DNS（域名系统）是应用层协议，运行在UDP协议之上，使用端口53。因特网上作为域名和ip地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串</p>\n<h3>DNS域名如何解析的？</h3>\n<p>DNS的分布数据库是以域名为索引的，每个域名其实是一颗很大的逆向树路径。大概查找过程为浏览器缓存-> 本地hosts文件->本地DNS解析器->本地DNS服务器->其他域名服务器。详细过程如下：</p>\n<ol>\n<li>\n<p>在浏览器输入image.baidu.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析</p>\n</li>\n<li>\n<p>如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，则直接返回，完成域名解析</p>\n</li>\n<li>\n<p>如果hosts和本地DNS解析器缓存都没有相应的网址映射关系，首先会找TCP/IP参数中设置的首选DNS服务器，在此我们叫它本地DNS服务器，此服务器收到查询时，如果要查找的域名，包含在本地配置区域资源中，则返回解析结果给客户端，完成域名解析，此解析具有权威性</p>\n</li>\n<li>\n<p>如果要查询的域名，不在本地DNS服务器区域解析，但该服务器缓存了此网址的映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。</p>\n</li>\n<li>\n<p>如果本地DNS服务器本地区域文件和缓存解析都失效，则根据本地DNS服务器的设置（是否设置转发器）进行查询，如果未用转发模式，本地DNS就把请求发至13台根DNS，根DNS服务器收到请求之后会判断这个域名（.com）是谁来授权管理，并会返回一个负责该顶级域名服务器的IP。本地DNS服务器接收到IP信息之后，将会负责联系负责.com域的这台服务器，这台负责.com域的服务器接收到请求之后，如果自己无法解析，它就会找一个管理.com域的下一级DNS服务器地址（baidu.com）给本地DNS服务器，当本地DNS服务器收到这个地址后，就会找image.baidu.com域服务器，重复上面的动作，直至找到image.baidu.com主机</p>\n</li>\n<li>\n<p>如果用的是转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或转发至上上级，以此循环。</p>\n</li>\n</ol>\n<h3>DNS为啥使用UDP协议作为传输层协议？</h3>\n<p>为了避免使用 TCP 协议时造成的连接时延</p>\n<ul>\n<li>为了得到一个域名的IP地址往往会向多个域名服务器查询，如果使用TCP协议，每次请求都会存在连接时延，这使得DNS服务变慢</li>\n<li>大多数的地址查询请求，都是浏览器请求页面时发出，这样会造成页面的等待时间过长</li>\n</ul>\n<h3>DNS服务器类型</h3>\n<p>DNS规范定义了两种类型的DNS服务器，一个叫主DNS服务器，一个叫辅助DNS服务器。在一个区中主DNS服务器从自己本机的数据文件中读取该区的DNS数据信息，而辅助DNS服务器则从区的主DNS服务器中读取该区的DNS数据信息。当一个辅助DNS启动时，他需要与主DNS服务器通信，并加载数据信息，这就叫区传送，使用TCP协议</p>\n<p>为什么域名解析用UDP？为什么区域复制用TCP？</p>\n<h3>dig命令</h3>\n<p>查询域名信息</p>\n<p>查询域名解析网站\n<a href=\"https://tool.chinaz.com/dns\">chinaz</a>、<a href=\"https://www.ipaddress.com/\">ipaddress</a></p>\n<h3>DNS实现负载均衡</h3>\n<p>大型网站都会使用多台服务器提供服务，因此一个域名可能会对应多个服务器地址。每当用户发起网站域名的DNS请求时，DNS服务器返回这个域名所对应服务器所对应服务器IP地址集合，在每个应答中会循环这些IP地址的顺序，用户一般会选择排在前面的地址发送请求。以此用户的请求均衡的分配到不同的服务器上，即实现了负载均衡。</p>\n<h3>DNS实操</h3>\n<p>github打开太慢，你有什么办法打开快一点</p>\n<p>CDN（内容分发网络）</p>\n<h3>参考</h3>\n`}}></div>\n  }\n  ","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:`<h3>HTTP、HTTPS</h3>\n<p>HTTP协议是基于TCP/IP的可靠传输的应用层协议，其特点是无状态、明文传输、队头阻塞，HTTP在版本（1.0、1.1、2.0）迭代中都进行了处理解决，各版本特点如下：<br>\nHTTP1.0</p>\n<pre><code>1. 可以发送任何格式的内容，文本、视频、图像、二进制等\n2. 不支持断点续传，每次都会传送全部的页面和数据\n3. 只使用header中If-Modified-Since和Expire作为缓存失效标准\n4. 请求header中没有传递主机名（hostname）\n</code></pre>\n<p>HTTP1.1</p>\n<pre><code>1. 引入持久连接，即TCP连接默认不关闭，可以被多个请求复用，不用声明Connection:keep-alive,长连接的时长可以通过请求头中的keep-alive设置\n2. HTTP管道\n客户端不需要等待服务器响应请求之后，才能发送后续的请求。但是HTTP管道仍然要求服务器按照接收到的请求的顺序进行响应，因此，如果管道中的单个请求执行缓慢，则对客户端的所有后续响应都将相应的延迟，这个问题就是队头阻塞。当时的解决方案是在客户端的每台主机上建立多个TCP连接，同时设置了最大可以同时连接的限制，以达到微妙的平衡。\n\n3. 增加E-tag、If-Modified-Since、If-Match、If-None-Match\n4. 支持断点续传，通过请求头中的Range来实现\n5. 使用虚拟网络，在一台物理服务器上可以存在多个虚拟主机，并且他们共享一个IP地址\n6. 新增方法：PUT、PATCH、OPTIONS、DELETE\n</code></pre>\n<p>HTTP2.0</p>\n<ol>\n<li>\n<p>二进制分帧\n采用二进制格式，全部传输01串，便于机器解码，这样的报文格式被拆分为一个个二进制帧，用Header帧存放头部字段，Data帧存放请求体数据</p>\n</li>\n<li>\n<p>头部压缩：HPACK算法+哈夫曼编码</p>\n</li>\n</ol>\n<p>为什么要压缩？在HTTP/1.x中，HTTP请求和响应都是由状态行、请求/响应头部、消息主体三部分组成的。一般来说，消息主体都会经过gzip压缩，或者本身就是经过压缩后的二进制文件（如图片、视频），但是状态行和头部却没有经过任何压缩，直接以纯文本传输。随着web功能的越来越复杂，请求数量也会越来越多，大量的请求导致消耗在请求头部的流量变多，每次都要传输UserAgent、Cookie这类不频繁变动的字段内容，完全是一种浪费，这导致传输头部的网络开销可能比消息主体还要大，因此就有了头部压缩技术，HTTP/2.0使用的是HPACK算法进行压缩</p>\n<p>HPACK，在支持HTTP/2.0的浏览器和服务端之间：</p>\n<ol>\n<li>\n<p>维护一份相同的静态字典，包含常见的头部名称，以及特别常见的头部名称与值的组合\n对于完全匹配的头部键值对，例如:method:GET，可以直接使用一个字符表示\n对于头部名称可以匹配的键值对，例如cookie:xxx，可以将名称使用一个字符表示</p>\n</li>\n<li>\n<p>维护一份相同的动态字典，可以动态添加内容</p>\n</li>\n<li>\n<p>支持基于静态哈夫曼表的哈夫曼编码，<a href=\"https://zhuanlan.zhihu.com/p/390459645\">哈夫曼编码的原理</a>即统计所有出现字符的次数，然后根据字符出现次数构建一颗哈夫曼树，哈夫曼树的特点就是出现频率越高的字符越靠近根结点，最后以哈夫曼树进行编码/解码，编码的过程即沿着树向要编码的字符前进，如果走了左节点则标记为0，走了右节点则标记为1，从根结点到叶子节点的路径就是该字符的编码。出现字符次数越多的，编码越短，最终压缩之后的编码越短，起到压缩的目的。gzip就使用了哈夫曼编码进行压缩</p>\n</li>\n<li>\n<p>多路复用\nHTTP/1.x中，如果想并发多个请求，必须使用多个TCP连接，且浏览器为了控制资源还会对单个域名有6-8个的TCP连接请求限制\nHTTP/2.0中，同域名下的所有通信都是在单个连接下完成的，单个连接可以承接任意数量的双向数据流，数据流以消息的形式发送，而消息又由一个或多个帧组成，多个帧之间可以乱序发送，根据帧首部的流标识可以重新组装，即流标识符（Stream ID），有了它，接收双方就能从乱序的二进制帧中选择ID相同的帧，按照顺序组装成请求/响应报文</p>\n</li>\n</ol>\n<p>在TCP协议层上仍然存在这类似的队头阻塞阻塞的问题，当一个TCP包在传输过程中丢失时，在服务器重新发送丢失的包之前，接收方无法确认传入的包，由于TCP在设计上不受诸如HTTP之类的高级协议的影响，因此一个丢失的数据包将阻塞所有正在传输的HTTP请求的流，直到丢失的数据重新被发送</p>\n<ol start=\"4\">\n<li>\n<p>服务器推送</p>\n</li>\n<li>\n<p>请求优先级</p>\n</li>\n</ol>\n<p>HTTP/3.0<br>\nHTTP/2.0下使用多路复用，同一域名下只需要使用一个TCP连接，但是当这个TCP连接出现丢包的情况，就会导致整个TCP开始等待重传，也导致后面的数据都被阻塞了。出现包阻塞的原因是因为底层TCP协议导致的问题，Google基于UDP协议推出一个QUIC协议，使用在HTTP/3上。QUIC的优点有：</p>\n<ul>\n<li>避免包阻塞</li>\n<li>快速重启会话</li>\n</ul>\n<h3>HTTPS</h3>\n<p>HTTPS = HTTP + SSL/TLS。TLS/SSL的功能实现主要依赖于三类基本算法：散列函数、对称加密和非对称加密。使用非对称加密实现身份认证和密钥协商，对称加密算法采用协商的密钥对数据加密，基于散列函数验证数据的完整性。</p>\n<p>SSL（Secure Socket Layer）安全套接层，是1994年由Netscape公司设计的一套协议，并于1995年发布3.0版本。TLS（Transport Layer Security）传输安全是IETF在SSL3.0基础上设计的协议，实际相当于SSL的后续版本。</p>\n<p>SSL/TLS工作原理：用CA证书认证身份（证书签名）及传递公钥（服务端），用非对称加密算法，交换用于对称加密的密钥，通过对称加密算法，加密正常的网络通信。</p>\n<p>工作过程：\n客户端发起HTTP请求，服务端发送CA证书（证书中含有证书签名和服务端公钥），客户端认证真伪，然后解密出服务端公钥\n用公钥加密自己生成的对称加密的密钥，发送给服务端</p>\n<h3>加密算法</h3>\n<p>对称加密算法，DES、AES\nDES（Data Encryption Standard）原理：利用56+8奇偶校验位（第8、16、24、32、40、48、56、64）=64位的密钥对以64为单位的块数据进行加解密。\nAES（Advanced Encryption Standard）原理：AES算法主要有四种操作处理，分别是密钥加法层(也叫轮密钥加，英文Add Round Key)、字节代换层(SubByte)、行位移层(Shift Rows)、列混淆层(Mix Column)。而明文x和密钥k都是由16个字节组成的数据(当然密钥还支持192位和256位的长度，暂时不考虑)，它是按照字节的先后顺序从上到下、从左到右进行排列的。</p>\n<p>RSA经典的非对称加密算法\n原理：给定连个素数，很容易得出他们的乘积，但是反过来，给定出他们的乘积，却很难得到这两个素数。如果能解决大整数（如几百位的整数）分解的快速方法，那么RSA算法将轻易被破解</p>\n<p>SSH工作原理即使用非对称加密来保证安全性，在传输过程中数据是加密的，使用最多的是安全登录和文件传输</p>\n<p>状态码</p>\n<p>1XX：接受的请求正在处理，信息类状态码\n2XX：成功\n3XX：重定向\n4XX：客户端错误\n5XX：服务器错误</p>\n<p>缓存</p>\n<pre><code>cache-control\nexpire\n</code></pre>\n<p>跨域和浏览器同源策略</p>\n<p>Cookie（Session）和Token</p>\n<p>ASCII编码</p>\n`}}></div>\n  }\n  ","\nimport React, { useEffect } from 'react';\n\nimport 'highlight.js/styles/xcode.css';\nconst hljs = require('highlight.js');\n\nexport default () => {\n  useEffect(() => {\n    document.querySelectorAll('code').forEach(el => {\n      el.style.backgroundColor = '#f8f8f8';\n      hljs.highlightElement(el);\n    });\n  }, [])\n  return <div style={{ fontSize: '0.26rem' }} dangerouslySetInnerHTML={{ __html: `` }}></div>\n}\n","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:``}}></div>\n  }\n  ","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:`<h1>作用域</h1>\n<h3>关键词</h3>\n<ul>\n<li>var、let/const、变量提升、暂时性死区</li>\n<li>词法作用域、执行上下文</li>\n<li>闭包</li>\n<li>函数、方法、IIFE、模块</li>\n</ul>\n<p>作用域是变量/常量的访问规则，或者说是变量/常量的影响范围，通过指定作用域的类型来分配变量的访问权限，例如函数作用域只在函数代码块内生效，全局作用域在全局任何地方都能访问。作用域类型即变量访问权限分配规则</p>\n<p>作用域链：在多层嵌套的父子作用域中，提供变量查找的渠道。</p>\n<h3>var变量提升</h3>\n<p>关键词：词法环境、块作用域、暂时死区</p>\n<p>变量的声明周期：创建、初始化、赋值、引用、销毁。变量提升相关的三个阶段是创建、初始化和赋值</p>\n<p>var变量提升：创建和初始化（undefined）是被提升的，赋值不是\nlet变量提升：创建是被提升的（存入暂时性死区），初始化和赋值不是\nfunction变量提升：创建、初始化和赋值同时被提升</p>\n<p>var定义变量特点</p>\n<ol>\n<li>变量提升：在任何时候都会在执行代码之前处理变量声明，var变量声明是编译时</li>\n<li>变量同名覆盖：var可以重复声明赋值，后面会覆盖前面</li>\n<li>全局使用var定义的变量会成为window的属性</li>\n<li>只认函数作用域和全局作用域</li>\n</ol>\n<p>块作用域\n词法环境：当执行代码块（{}包裹的代码）时会创建一个词法环境，与全局环境形成嵌套，词法环境里包含环境记录。而我们的let定义的变量就存放在这个词法环境中。let在多个块作用域中声明变量时，js会创建单独的区域由词法环境为这些变量维护一个类似栈的结构，所以同名的let变量在不同的代码块中声明是不会冲突的。即词法环境是执行上下文的另一个组件</p>\n<p>es6的let和const声明的变量在代码执行开始到声明之前，变量都处于暂时性死区（Temporal dead zone，TDZ）之中。暂时性死区是代码执行时，一段从当前作用域开始到使用let/const声明变量/常量行之前的区域，在这段区域中变量尚未被初始化，如果在这期间尝试访问变量将会抛出ReferenceError。例如</p>\n<pre><code class=\"language-js\">// TDZ，开始\nconsole.log(a);// undefined\nconsole.log(b);//RefernceError\nvar a = 1\nlet b = 2; // TDZ，结束(b)\n</code></pre>\n<p>let声明的变量将作用域限制在块作用域内，在代码没有执行到它的初始化语句之前，它仍然存在于TDZ中</p>\n<pre><code class=\"language-js\">function foo(){\n  var a = 1;\n  if(a){\n    let a = a + 1; // ReferenceError\n  }\n}\nfoo();\n</code></pre>\n<pre><code class=\"language-js\">function bar(n){\n  console.log(n); // {a:[1,2,3]}\n  for(let n of n.a){// ReferenceError\n    console.log(n);\n  }\n}\nbar({a: [1,2,3]})\n</code></pre>\n<p>let定义变量的特点</p>\n<ol>\n<li>存在暂时性死区，死区内访问变量会报错</li>\n<li>不能重复命名，存在重复命名会报错</li>\n<li>在块作用域中生效</li>\n</ol>\n<h3>函数作用域</h3>\n<p>创建函数有多种方式</p>\n<ol>\n<li>函数表达式</li>\n<li>function关键词</li>\n<li>箭头函数表达式（lamada函数）和自执行函数表达式（IIFE）</li>\n</ol>\n<p>函数作用域</p>\n<h3>模块</h3>\n<p>模块化的重要意义即拆分，作用域拆分，变量的影响</p>\n<h3>var 函数作用域/全局作用域</h3>\n<pre><code class=\"language-js\">if(! &quot;a&quot; in window){\n    var a = 1;\n}\nconsole.log(a);\n</code></pre>\n<pre><code class=\"language-js\">var a = 1;\nb = 2;\neval('var c = 3');\ndelete a;\ndelete b;\ndelete c;\n</code></pre>\n<h3>function</h3>\n<pre><code class=\"language-js\">(function f () {\n  function f () { return 1; }\n  return f();\n  function f () { return 2; }\n})();\n</code></pre>\n<pre><code class=\"language-js\">(function(x){\n  delete x;\n  return x;    \n}\n)(1);\n</code></pre>\n<h3>var与IIFE</h3>\n<pre><code class=\"language-js\">(function() {\n  var a = b = 5;\n})();   \nconsole.log(b);\nconsole.log(a);\n</code></pre>\n<pre><code class=\"language-js\">var a = 10;\n(function () {\n  console.log(a)\n  a = 5\n  console.log(window.a);\n  var a = 20;\n  console.log(a)\n})()\n</code></pre>\n<pre><code class=\"language-js\">var b = 10;\n(function b() {\n  b = 20;\n  console.log(b)\n})()\n</code></pre>\n<pre><code class=\"language-js\">var foo = &quot;Hello&quot;;\n(function () {\n  var bar = &quot; World&quot;;\n  console.log(foo + bar);\n})();\nconsole.log(foo + bar);\n</code></pre>\n<pre><code class=\"language-js\">// 输出结果\nvar name = 'Tom';\n(function () {\n  if (typeof name === 'undefined') {\n    var name = 'Jack';\n    console.log('Goodbye ' + name)\n  } else {\n    console.log('Hello ' + name);\n  }\n})();\n\n//输出结果\nvar name = 'Tom';\n(function () {\n  if (typeof name === 'undefined') {\n    name = 'Jack';\n    console.log('Goodbye ' + name)\n  } else {\n    console.log('Hello ' + name);\n  }\n})();\n\n</code></pre>\n<pre><code class=\"language-js\">var foo = {n:1};\n(function(foo){\n    console.log(foo.n);\n    foo.n = 3;\n    var foo = {n:2};\n    console.log(foo.n);\n})(foo);\nconsole.log(foo.n);\n</code></pre>\n<h3>变量覆盖</h3>\n<pre><code class=\"language-js\">meili()\nfunction meili () {\n  console.log(&quot;meili&quot;)\n}\nmogu()\nvar mogu = function () {\n  console.log(&quot;mogu&quot;)\n}\n</code></pre>\n<pre><code class=\"language-js\">compute(10, 100);\nvar compute = function (A, B) {\n  console.info(A * B);\n};\nfunction compute (A, B) {\n  console.info(A + B);\n}\nfunction compute (A, B) {\n  console.info((A + B) * 2);\n}\ncompute(2, 10);\n</code></pre>\n<pre><code class=\"language-js\">\ncheck('first');\nfunction check (ars) {\n  console.log(1, ars);\n}\n\ncheck('second');\nvar check = function (ars) {\n  console.log(2, ars);\n}\n</code></pre>\n<h3>异步操作中作用域</h3>\n<pre><code class=\"language-js\">// html\n<ul>\n  <li>1</li>\n  <li>2</li>\n  <li>3</li>\n  <li>4</li>\n</ul>\n// js\nvar elements = document.getElementsByTagName(&quot;li&quot;);\nfor (var i = 0; i < elements.length; i++) {\n  elements[i].onclick = function () {\n    console.log(i);\n  };\n}\n</code></pre>\n<pre><code class=\"language-js\">for (var i = 0; i < 3; i++) {\n  setTimeout(_ => {\n    console.log(i)\n  })\n}\n\nfor (let i = 0; i < 3; i++) {\n  setTimeout(_ => {\n    console.log(i)\n  })\n}\n</code></pre>\n<pre><code class=\"language-js\">for (var i = 0; i< 10; i++){\n   setTimeout(() => {\n    console.log(i);\n   }, 1000)\n}\n\nfor (var i = 0; i< 10; i++){\n  (function(i){\n    setTimeout(() => {\n    console.log(i);\n   }, 1000)\n  })(i)\n}\n\nfor (var i = 0; i< 10; i++){\n  (function(i){\n    setTimeout(() => {\n    console.log(i);\n   }, 1000*i)\n  })(i)\n}\n\nfor (var i = 0; i< 10; i++){\n  setTimeout(() => {\n    (function(i){console.log(i);}(i)\n  }), 1000)\n}\n\nfor (var i = 0; i< 10; i++){\n  setTimeout(() => {\n    console.log(i);\n  }, 1000)\n}\n</code></pre>\n`}}></div>\n  }\n  ","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:`<h1>原型链</h1>\n<h3>关键词</h3>\n<ul>\n<li>__proto__、prototype、constructor</li>\n<li>class、extends、super、new、new.target</li>\n<li>instanceof、Object.create</li>\n<li>Object.getPrototypeOf、Object.setPrototypeOf</li>\n</ul>\n<h3>原型链</h3>\n<p>原型：构造函数和实例对象的连接的纽带，函数和对象的关系（横向），js中原型是继承的基础。每个对象（object）都有一个原型链对象（也叫隐式原型）__proto__（现在__proto__已经废弃，改为使用Object.getPrototypeOf()和Object.setPrototypeOf()来实现），所有构造函数都有一个原型对象prototype</p>\n<p>原型链：对象属性/方法的访问规则，它是顺着对象的隐式原型（__proto__）向上（构造函数）查找，父类和子类以及他们的实例对象之间的关联关系（垂直）。就像我们抽水的时候，水是顺着建好的水管来流动的，水管就是一个水的流动规则，可以向上流，也可以向下流，可以动态的构造水管的走向，自定义规则。原型链、作用域链等也是这样的，我们可以动态修改隐式原型，可以修改__proto__对象的某个属性，也可以重写__proto__对象，也可以通过对象隐式原型访问构造函数。</p>\n<p>原型和原型链组成了对象属性访问的规则网络（横向和纵向二维关系）</p>\n<p>如果原型链中断，会发生什么？</p>\n<p>我们知道可以使用instanceof来检测某个实例对象的原型链上是否存在构造函数的原型对象（prototype）。其实现伪代码如下</p>\n<pre><code class=\"language-js\">function myInstanceof(object,constructor){\n  left = object.__proto__\n  right = constructor.prototype\n  while(true){\n    if(left === null) return false\n    if(left === right) return true\n    left = left.__proto__\n  } \n}\n</code></pre>\n<h3>创建对象的几种方式</h3>\n<p>new关键词和Object.create()都会创建一个对象并返回一个对象，new的过程概括起来有4步,实现伪代码如下</p>\n<pre><code class=\"language-js\">function myNew(constructor){\n  // 第1步，创建一个对象\n  object = {}\n  // 第2步，补齐原型链\n  object.__proto__ = constructor.prototype\n  // 第3步，确保执行上下文对象正确（this）\n  ret = constructor.call(object)\n  // 第4步，返回一个对象\n  return ret || object\n}\n</code></pre>\n<p>Object.create(proto)即以现有对象（proto）作为原型创建一个新的对象。实现伪代码如下</p>\n<pre><code class=\"language-js\">function objectCreate(object){\n  const newObj = {}\n  newObj.__proto__ = object\n  return newObj\n}\n</code></pre>\n<p>我们最常用的是通过字面量来创建对象，即const obj = {}这种方式等价于const obj = Object()</p>\n<p>怎么识别我的对象是通过哪种方式创建的呢？比如我们通过new来创建一个对象，就可以在构造函数中通过new.target来检测这个函数是否作为构造函数通过new来调用的，它指向直接被new执行的构造函数。例如</p>\n<pre><code class=\"language-js\">function Foo() {\n  if (!new.target) throw &quot;Foo() must be called with new&quot;;\n  console.log(&quot;Foo instantiated with new&quot;);\n  console.log(new.target)\n}\n\nFoo(); // throws &quot;Foo() must be called with new&quot;\nnew Foo(); // logs &quot;Foo instantiated with new&quot;\n</code></pre>\n<h3>原型、隐式原型和构造函数(prototype、__proto__、constructor)</h3>\n<p>实例对象、构造函数，父类子类的关联关系总结如下公式</p>\n<pre><code>// 原型：描述了实例对象和构造函数的关联关系\n实例对象.constructor === 构造函数\n实例对象.__proto__ === 构造函数.prototype\n\n// 原型链：描述了构造函数和其祖先构造函数的关联关系\n子类.__proto__ === 父类\n子类.prototype.__proto__ === 父类.prototype\n</code></pre>\n<p>上面的公式等价于下面的例子</p>\n<pre><code class=\"language-js\">class A {}\nclass B extends A {}\n\nconst a = new A();\nconst b = new B();\n\n// a.constructor === A\n// a.__proto__ === A.prototype\n\n// B是一个对象\n// B.__proto__ === A\n// B是一个函数\n// B.prototype.__proto__ === A.prototype\n</code></pre>\n<h3>原型对象属性的操作</h3>\n<pre><code class=\"language-js\">function Fn1 (name) {\n  if (name) {\n    this.name = name;\n  }\n}\nFn1.prototype.name = &quot;jack&quot;\nlet a = new Fn1();\nconsole.log('a:', a.name);\n\nfunction Fn2 (name) {\n  this.name = name;\n}\nFn2.prototype.name = &quot;jack&quot;\nlet b = new Fn2();\nconsole.log('b:', b.name);\n</code></pre>\n<pre><code class=\"language-js\">function Foo () { }\nFoo.prototype.z = 3;\nvar obj = new Foo();\nconsole.info(obj.z)\nobj.z = 10;\nconsole.info(obj.z);\ndelete obj.z;\nconsole.info(obj.z);\n</code></pre>\n<pre><code class=\"language-js\">var tmp = {};\nvar A = function () { };\nA.prototype = tmp;\n\nvar a = new A();\nA.prototype = {};\n\nvar b = Object.create(tmp);\nb.constructor = A.constructor;\n\nconsole.log(a instanceof A);\nconsole.log(b instanceof A);\n</code></pre>\n<pre><code class=\"language-js\">function Person(age){\n  this.age = age;\n}\n\nPerson.prototype = {\n  constructor:Person,\n  getAge:function(){\n    console.log(this.age);\n  },\n }\n\nvar p = new Person(24);\nPerson.prototype.age = 18;\nObject.prototype.age = 20;\np.getAge();\n</code></pre>\n<h3>es6 class get/set</h3>\n<pre><code class=\"language-js\">class Phone{\n  constructor(price){\n    this.price = price;\n  }\n  get price(){\n    return 999;\n  }\n}\nvar p = new Phone(888);\nconsole.log(p.price);\n</code></pre>\n<h3>prototype和__proto__关系</h3>\n<pre><code class=\"language-js\">class A { }\nclass B extends A { }\nconst a = new A()\nconst b = new B()\n\nconsole.log(a.__proto__)\nconsole.log(b.__proto__)\nconsole.log(B.__proto__)\nconsole.log(B.prototype.__proto__)\nconsole.log(b.__proto__.__proto__)\n</code></pre>\n<h3>构造函数和普通函数</h3>\n<pre><code class=\"language-js\">var name = 'Jay'\nfunction Person (name) {\n  this.name = name;\n  console.log(this.name)\n}\nvar a = Person('Tom')\nconsole.log(name)\nconsole.log(a)\nvar b = new Person('Michael')\nconsole.log(b)\n</code></pre>\n<h3>Object.create()实现原理</h3>\n<pre><code class=\"language-js\">const Book = {\n  price: 32\n}\nconst book = Object.create(Book);\nbook.type = 'Math';\ndelete book.price;\ndelete book.type;\nconsole.log(book.price);\nconsole.log(book.type);\n</code></pre>\n<h3>原型链与闭包</h3>\n<pre><code class=\"language-js\">var Foo = (function () {\n  var x = 0;\n  function Foo () { }\n  Foo.prototype.increment = function () {\n    ++x;\n    console.log(x);\n  };\n  return Foo;\n})();\n\nvar a = new Foo();\na.increment();\na.increment();\nvar b = new Foo();\na.increment();\n</code></pre>\n`}}></div>\n  }\n  ","\n  import React,{useEffect} from 'react';\n \n  import 'highlight.js/styles/xcode.css';\n  const hljs = require('highlight.js');\n\n  export default () => {\n    useEffect(()=>{\n      document.querySelectorAll('code').forEach(el => {\n        el.style.backgroundColor='#f8f8f8';\n        hljs.highlightElement(el);\n      });\n    },[])\n    return <div style={{fontSize:'0.26rem'}} dangerouslySetInnerHTML={{__html:`<h3>网络模型、ISO/OSI七层模型、TCP/IP模型</h3>\n<pre><code>最开始的时候网络协议是由网络公司自定义的，微软、苹果、思科等都有自己的网络协议，但这各家的协议是不能互联互通的。对于消费者来说这是技术垄断，买了苹果的设备就不能用微软的设备，因为他们的协议都是不一样的，没有统一的标准来规范网络协议，这极大阻碍了互联网的发展，因此国际标准化组织（ISO）制定了一个用于计算机或者通信系统间互联的标准体系，即开放式系统互联模型（OSI）。\n\n这个标准解释了协议之间应该如何相互作用，OSI定义了网络互连的七层模型（物理层、数据链路层、网络层、传输层、会话层、表示层、应用层），TCP/IP是一组协议的代名词，它包括许多协议，组成了TCP/IP协议簇。它是把OSI七层模型简化成了四层模型（应用层、传输层、网络层、网络接口层），TCP/IP模型将OSI模型简化成4层，传输层和网络层被完整保留，因此网络中最核心的技术就是传输层和网络层技术。网络7层模型是一个参考标准，并非实现。网络4层模型是一个实现的应用模型\n\nOSI模型是从上往下的，越底层越接近硬件，越上层越接近软件，这种分层模型是我们计算机科学中常用的方法，分层直接通过规定好的接口进行交互，每一层其实对它上一层或者下一层都是一个黑盒，其实他的上层和下层也不关心它的内部实现，只关心它们之间进行交互的接口，接口是规定的信息，要给到什么都是规定好的。传输层的数据称为段（segments），网络层的数据称为包（packages），数据链路层的数据称为帧（frames），物理层的数据称为比特流（bits）\n\n这种分层模型的好处就是可以对任何一层进行独立升级和优化，只要保持接口不变那么这个模型整体就不会有问题。\n\n\n应用层：为操作系统或网络应用程序提供网络服务的接口。起到了调用的作用，为应用软件而设的接口，设置与另一应用软件之间的通信，提供不同计算机间的文件传输、访问管理、电子邮件内容处理。例如: HTTP，HTTPS，FTP，TELNET，SSH，SMTP、DNS等\n\n表示层：主要任务是把所传输的数据的抽象语法变换为传送语法，把不同计算机内部的不同形式转换为网络通信中的标准形式。此外对传送数据的加密解密、正文压缩还原也属于表示层的的任务，即数据的处理，表示、安全、压缩等，格式有，jpeg、ascii、decoic、加密格式等。如URL加密、口令加密、图片编码解码等\n\n会话层：负责在数据传输中设置和维护计算机网络中两台计算机之间的通信连接。控制应用程序之间的会话能力，保持数据的单向传输，一对一，一对多的控制。如服务器验证用户登录、断点续传等\n\n运输层：端到端传输数据的基本功能，高低层之间衔接的接口层，定义传输数据的协议端口号以及流控和差错校验，如TCP、UDP、进程、端口\n\n网络层：定义ip编址，定义路由功能，进行逻辑地址的寻址，实现不同网络之间路径选择，如不同设备的数据转发。如IP地址、路由器、多层交换机、防火墙等\n\n数据链路层(DataLink)：定义数据的传输格式，如何传输，如何标识。建立逻辑连接、进行硬件地址寻址、差错校验等，将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现但不能纠正。如MAC地址、网卡、网桥、二层交换机等\n\n物理层（Physical）：底层数据传输，建立、维护、断开物理连接。如中继器、集线器、网线等\n</code></pre>\n<h3>传输层</h3>\n<p>TCP是面向连接的、可靠的、基于字节流的传输层协议。</p>\n<p>TCP协议主要特点</p>\n<pre><code>TCP是面向连接的传输层协议。应用程序在使用TCP协议之前，必须先建立TCP连接，在传输数据完毕之后，必须释放已经建立的TCP连接\n\n每一条TCP连接只能有两个端点，每一个TCP连接只能是点对点的（一对一）。\n\nTCP提供全双工通信。TCP允许通信双方的应用进程在任何时候都能发送数据，TCP连接的两端都设有发送缓存和接收缓存，用来存放双向通信的数据。\n\n字节流。用户消息通过TCP协议传输时，消息可能被操作系统分组成多个TCP报文，如果接收方的程序不知道消息边界，是无法读出一个有效的用户消息的。并且TCP报文是有序的，当前一个TCP报文没有收到的时候，即使它先收到的后面的TCP报文，那么也不能扔给应用层去处理，同时对重复的TCP报文会自动丢弃。\n\n可靠性：无论网络链路中出现了怎样的变化，TCP都可以保证一个报文一定可以到达接收端。通过流量控制、超时重传、拥塞控制等机制来保证可靠性\n</code></pre>\n<p>TCP连接的三次握手和四次挥手</p>\n<ol>\n<li>最开始，客户端和服务端都处于CLOSE状态，首先服务器主动监听某个端口，处理LISTEN状态</li>\n<li>客户端向服务端发起连接，并且把第一个SYN报文发送给服务端，之后客户端处于SYN-SEND状态</li>\n<li>服务端收到客户端的SYN报文，向客户端发送SYN+ACK报文，之后服务端处于SYN-RCVD状态</li>\n<li>客户端收到服务端的报文后，还要向服务端发送一个应答报文ACK，之后客户端处于ESTABLISH状态</li>\n<li>服务端收到客户端的应答报文之后，也处于ESTABLISH状态</li>\n</ol>\n<p><strong>第三次握手是可以携带数据的，前两次是不可以携带数据的</strong></p>\n<h4>为什么是三次握手，而不是两次、四次</h4>\n<pre><code>阻止重复历史连接的初始化，防止旧的重复连接初始化造成混乱，即为了防止已经失效的连接请求报文段突然又传到服务端，产生错误\nTCP的可靠连接是靠seq（sequence numbers序列号）来达成的，通过TCP连接发送的每一个包，都有一个sequence number，因为每个包都要序列号的，所以都能被确认收到这些包，即通信双方都要确认对方收到了自己的序列号\n\n同步双方的初始序列号\n避免浪费资源\n</code></pre>\n<h4>第一次握手丢失了，会发生什么？</h4>\n<p>会触发「超时重传」机制，重传 SYN 报文，而且重传的 SYN 报文的序列号都是一样的，不同版本的操作系统可能超时时间不同，有的1s、有的3s，这个时间是写死在内核里的。在Linux里，客户端的 SYN 报文最大重传次数由 tcp_syn_retries内核参数控制，这个参数是可以自定义的，默认值一般是 5。通常，第一次超时重传是在 1 秒后，第二次超时重传是在 2 秒，第三次超时重传是在 4 秒后，第四次超时重传是在 8 秒后，第五次是在超时重传 16 秒后。没错，每次超时的时间是上一次的 2 倍。当第五次超时重传后，会继续等待 32 秒，如果服务端仍然没有回应 ACK，客户端就不再发送 SYN 包，然后断开 TCP 连接。</p>\n<h4>第二次握手丢失了，会发生什么？</h4>\n<p>服务端收到客户端第一次握手后，就会回SYN-ACK给客户端，这就是第二次握手，此时服务端就会进入到SYN-RCVD状态\n第二次握手的SYN-ACK有两个作用</p>\n<ul>\n<li>第二次握手里的ACK，是对第一次握手的确认报文</li>\n<li>第二次握手里的SYN，是服务端发起建立TCP连接的报文</li>\n</ul>\n<p>因为第二次握手报文里包含对客户端第一次握手的确认ACK报文，如果客户端迟迟收不到第二次握手，那么客户端就会觉得自己的SYN报文（第一次握手）丢失了，于是客户端就会触发超时重传机制，重新传输SYN报文。最终客户端断开连接</p>\n<p>又因为第二次握手中包含服务端SYN报文，当客户端收到后，需要给服务端发送ACK确认报文（第三次握手），服务端才会认为该SYN报文被客户端收到了，如果第二次握手丢失了，那么服务端收不到第三次握手，于是服务端这边会触发超时重传机制，重新传输SYN-ACK报文。最终服务端断开连接</p>\n<h4>第三次握手丢失了，会发生什么？</h4>\n<p>第三次握手是对第二次握手的SYN的确认报文，当第三次握手丢失了，服务端迟迟收不到确认报文，就会触发超时重传机制，重新传输SYN-ACK直到收到第三次握手或者达到最大重传次数。ACK报文是不会有重传的，当ACK丢失了，就有对方重传对应的报文。</p>\n<h4>SYN攻击</h4>\n<p>我们都知道 TCP 连接建立是需要三次握手，假设攻击者短时间伪造不同 IP 地址的 SYN 报文，服务端每接收到一个 SYN 报文，就进入SYN_RCVD 状态，但服务端发送出去的 ACK + SYN 报文，无法得到未知 IP 主机的 ACK 应答，久而久之就会占满服务端的半连接队列，使得服务端不能为正常用户服务</p>\n<p>UDP不提供复杂的控制机制，利用IP提供面向无连接的通信服务</p>\n<h4>TCP和UDP的区别</h4>\n<pre><code>连接： TCP面向连接的传输层协议，传输数据之前先要建立连接。UDP不需要连接，即刻传输数据\n\n服务对象：TCP提供一对一的两点服务。UDP支持一对一、一对多、多对多的交互通信。\n\n可靠性：TCP是可靠交付数据的，数据可以无差错、不丢失、不重复、按序到达。UDP尽最大努力交付，不保证可靠交付数据，但可以基于UDP传输协议实现一个可靠的传输协议，例如QUIC协议\n\n拥塞机制、流量控制：TCP有拥塞机制和流量控制机制，保证数据传输的安全性。UDP则没有，即使网络非常拥堵，也不会影响UDP的发送速率\n\n首部开销：TCP首部较长会有一定的开销，没有开启选项时为20个字节，开启之后会更长。UDP首部固定8字节，固定不变，开销较小\n\n传输方式：TCP是流式传输，没有边界，但保证顺序和可靠。UDP是一个包一个包的发送，是有边界的，但可能丢包或乱序。\n\n分片不同：TCP数据大小如果大于MSS大小，则会在传输层进行分片，目标主机收到后，同样在传输层组装TCP数据包，如果中途丢失一个分片，只需要传输丢失的这个分片。UDP的大小如果大于MTU的大小，则会在IP层进行分片，目标主机收到后，在IP层组装完数据，再接着传输给传输层。\n</code></pre>\n<h4>TCP和UDP的应用场景</h4>\n<pre><code>TCP：FTP文件传输、HTTP/HTTPS\nUDP：包总量较少的通信，如DNS、SNMP等、视频音频等多媒体通信、广播通信。\n</code></pre>\n<h3>网络层</h3>\n<p>网络层的作用就是实现主机和主机之间的通信</p>\n<p>IP地址是用来识别网络上的设备，IP地址是由网络地址与主机地址两部分所组成。例如，在我们家里常用的地址：192.168.1.2中，192.168.1为网络地址。主机地址位于IP地址的后段，用来标识具体设备。同一网络上的设备都具有唯一的IP地址，只有IP地址唯一才能正常通信。就拿刚才的电话号码来说，只有号码唯一才能真正找到人，在IP地址192.168.1.2中，2就是主机地址。</p>\n<p>IP地址按照网络类型划分为5类：分别是A、B、C、D、E</p>\n<p>子网掩码即掩盖掉主机号，将子网掩码和 IP 地址按位计算 AND，就可得到网络号。\n子网掩码除了划分网络号和主机号，还一个作用即划分子网</p>\n<h3>网关和路由器</h3>\n<p><a href=\"https://datatracker.ietf.org/doc/html/rfc2616\">rfc草案</a></p>\n<p><a href=\"https://juejin.cn/post/6844903492763533319\">网络七层模型与四层模型区别</a></p>\n<p><a href=\"https://xiaolincoding.com/network/\">小林coding</a></p>\n`}}></div>\n  }\n  ","import React, { ReactElement } from 'react';\nimport Compthis0001 from './Compthis0001'\nimport Comp事件循环0002 from './Comp事件循环0002'\nimport Comp作用域0003 from './Comp作用域0003'\nimport Comp原型链0004 from './Comp原型链0004'\nimport CompDNS和CDN0005 from './CompDNS和CDN0005'\nimport CompHTTP网络的发展0006 from './CompHTTP网络的发展0006'\nimport Comp网络模型0007 from './Comp网络模型0007'\n\n  const CompMap: {[key: string]: ReactElement} = {\n    '0001':<Compthis0001/>,\n  '0002':<Comp事件循环0002/>,\n  '0003':<Comp作用域0003/>,\n  '0004':<Comp原型链0004/>,\n  '0005':<CompDNS和CDN0005/>,\n  '0006':<CompHTTP网络的发展0006/>,\n  '0007':<Comp网络模型0007/>\n  }\n  \n  export default ()=> {\n    const id = location.search.split('=')[1]\n    \n    return (\n      <div>\n        {CompMap[id]}\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from 'react';\nimport PageHeader from '@/components/PageHeader';\nimport SettingModal from \"@/components/PromisifyModal/SettingModal\";\nimport MoreIcon from '@/assets/more.svg';\nimport GobackIcon from '@/assets/goback.svg';\nimport Modal from \"@/components/PromisifyModal\";\nimport classnames from 'classnames';\nimport { data } from '@/data';\nimport './index.less';\n\nexport default function Header({ scroller }) {\n  const [fixed, setFixed] = useState(false);\n  const handleGoback = () => {\n    window.location.href = `https://xingguozm.github.io?backurl=${window.location.href}`\n  }\n  const openSettingModal = () => {\n    Modal.show(SettingModal, { data: data.theme });\n  }\n  useEffect(() => {\n    window.addEventListener('fullFixed', (e) => {\n      // console.log(e.detail.fullFixed)\n      setFixed(e.detail.fullFixed);\n    })\n  }, [])\n  return <PageHeader scroller={scroller} immersive={true}>\n    <div className={classnames({ ['header']: true })}>\n      <div className='header-goback' onClick={handleGoback}>\n        <img className='header-goback-icon' src={GobackIcon} />\n      </div>\n      <div className='header-title'>我的博客</div>\n      <div className='header-setting' onClick={openSettingModal}>\n        <img className='header-setting-icon' src={MoreIcon} />\n      </div>\n    </div>\n  </PageHeader>\n}","import React from 'react';\nimport styles from './index.module.less';\n\nexport default function PageBg({ children }) {\n  return <div className={styles.wrap}>\n    <div className={styles.bg}></div>\n    <div className={styles.content}>\n      {children}\n    </div>\n  </div>\n}","import React, { useRef, useEffect } from 'react';\nimport Modal from '@/components/PromisifyModal';\nimport Header from './components/Header';\nimport ArticlePage from './components/ArticleList';\nimport { viewport, setBodyStyleProperty } from '@/utils';\nimport PageBg from './components/PageBg';\nimport styles from './index.module.less';\n\nviewport();\n\nexport default function Article() {\n  const scroller = useRef(null);\n  useEffect(() => {\n    const theme = localStorage.getItem('--theme-color')\n    theme && setBodyStyleProperty('--theme-color', theme);\n  }, [])\n\n  return <Modal.Provider>\n    <div className={styles.wrap} ref={scroller}>\n      <PageBg>\n        <Header scroller={scroller}></Header>\n        <div className={styles.article}>\n          <ArticlePage />\n        </div>\n      </PageBg>\n    </div>\n\n  </Modal.Provider>\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".header {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-weight: bolder;\\n  font-size: 0.32rem;\\n  position: relative;\\n  background-color: var(--theme-color);\\n  color: #fff;\\n}\\n.header-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n.header-goback {\\n  position: absolute;\\n  left: 0.25rem;\\n}\\n.header-goback-icon {\\n  width: 0.4rem;\\n}\\n.header-setting {\\n  position: absolute;\\n  right: 0.25rem;\\n}\\n.header-setting-icon {\\n  width: 0.5rem;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Article/components/Header/index.less\"],\"names\":[],\"mappings\":\"AACA;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,mBAAA;EACA,kBAAA;EACA,kBAAA;EACA,oCAAA;EACA,WAAA;AAAF;AAGA;EACE,aAAA;EACA,sBAAA;EACA,mBAAA;AADF;AAGA;EACE,kBAAA;EACA,aAAA;AADF;AAGA;EACE,aAAA;AADF;AAGA;EACE,kBAAA;EACA,cAAA;AADF;AAGA;EACE,aAAA;AADF\",\"sourcesContent\":[\"\\n.header{\\n  width:100%;\\n  height:100%;\\n  display:flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-weight: bolder;\\n  font-size: 0.32rem;\\n  position:relative;\\n  background-color:var(--theme-color);\\n  color:#fff;\\n}\\n\\n.header-content{\\n  display:flex;\\n  flex-direction: column;\\n  align-items:center;\\n}\\n.header-goback {\\n  position: absolute;\\n  left: 0.25rem;\\n}\\n.header-goback-icon{\\n  width:0.4rem;\\n}\\n.header-setting {\\n  position:absolute;\\n  right:0.25rem;\\n}\\n.header-setting-icon{\\n  width:0.5rem;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-pages-Article-components-PageBg-index-module__wrap--O5rDu {\\n  width: 7.5rem;\\n  height: 15rem;\\n  background-color: #e5e7eb;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Article/components/PageBg/index.module.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAA;EACA,aAAA;EACA,yBAAA;AACF\",\"sourcesContent\":[\".wrap{\\n  width:7.5rem;\\n  height:15rem;\\n  background-color:#e5e7eb;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrap\": \"src-pages-Article-components-PageBg-index-module__wrap--O5rDu\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"p {\\n  line-height: 0.5rem;\\n}\\nul li,\\nol li {\\n  margin-left: 0.24rem;\\n}\\n.src-pages-Article-index-module__wrap--nXYc2 {\\n  width: 100%;\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: scroll;\\n  display: flex;\\n  justify-content: center;\\n}\\n.src-pages-Article-index-module__article--XXs1X {\\n  width: 7rem;\\n  margin-left: 0.25rem;\\n  margin-right: 0.25rem;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/Article/index.module.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAA;AACF;AACA;;EACE,oBAAA;AAEF;AAAA;EACE,WAAA;EACA,YAAA;EACA,kBAAA;EACA,kBAAA;EACA,aAAA;EACA,uBAAA;AAEF;AAAA;EACE,WAAA;EACA,oBAAA;EACA,qBAAA;AAEF\",\"sourcesContent\":[\"p{\\n  line-height: 0.5rem;\\n}\\nul li,ol li{\\n  margin-left:0.24rem;\\n}\\n.wrap{\\n  width:100%;\\n  height:100%;\\n  overflow-x:hidden;\\n  overflow-y:scroll;\\n  display:flex;\\n  justify-content: center;\\n}\\n.article{\\n  width:7rem;\\n  margin-left:0.25rem;\\n  margin-right:0.25rem;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrap\": \"src-pages-Article-index-module__wrap--nXYc2\",\n\t\"article\": \"src-pages-Article-index-module__article--XXs1X\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./index.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./index.module.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./index.module.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"article\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxingguozm_github_io\"] = self[\"webpackChunkxingguozm_github_io\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_classnames_index_js-node_modules_css-loader_dist_runtime_api_js-node_mod-02448e\",\"vendors-node_modules_highlight_js_styles_xcode_css-node_modules_highlight_js_lib_index_js\",\"src_components_PageHeader_index_tsx-src_components_PromisifyModal_SettingModal_index_tsx-src_-795e93\"], () => (__webpack_require__(\"./src/article.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["React","ReactDOM","Article","App","render","document","querySelector","useEffect","hljs","require","querySelectorAll","forEach","el","style","backgroundColor","highlightElement","fontSize","__html","Compthis0001","Comp事件循环0002","Comp作用域0003","Comp原型链0004","CompDNS和CDN0005","CompHTTP网络的发展0006","Comp网络模型0007","CompMap","id","location","search","split","useState","PageHeader","SettingModal","MoreIcon","GobackIcon","Modal","classnames","data","Header","scroller","fixed","setFixed","handleGoback","window","href","openSettingModal","show","theme","addEventListener","e","detail","fullFixed","styles","PageBg","children","wrap","bg","content","useRef","ArticlePage","viewport","setBodyStyleProperty","localStorage","getItem","article"],"sourceRoot":""}